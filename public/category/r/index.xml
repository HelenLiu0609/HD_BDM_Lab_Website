<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Chuan-Peng Lab</title>
    <link>https://chuan-peng-lab.netlify.app/category/r/</link>
      <atom:link href="https://chuan-peng-lab.netlify.app/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 28 Sep 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://chuan-peng-lab.netlify.app/media/icon_huab30dcb401eb8533ce7bec9312517304_65690_512x512_fill_lanczos_center_3.png</url>
      <title>R</title>
      <link>https://chuan-peng-lab.netlify.app/category/r/</link>
    </image>
    
    <item>
      <title>Content Analysis</title>
      <link>https://chuan-peng-lab.netlify.app/post/content-analysis/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://chuan-peng-lab.netlify.app/post/content-analysis/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;###############################library packages#############################
#base
#install.packages(&amp;#39;tidyverse&amp;#39;)
#install.packages(&amp;#39;bruceR&amp;#39;)
library(&amp;#39;tidyverse&amp;#39;)
library(&amp;#39;bruceR&amp;#39;)

#plot
#install.packages(&amp;#39;ggplot2&amp;#39;)
library(&amp;#39;ggplot2&amp;#39;)

#color
#install.packages(&amp;#39;viridisLite&amp;#39;)
#install.packages(&amp;#39;viridis&amp;#39;)
library(&amp;#39;viridisLite&amp;#39;)
library(&amp;#39;viridis&amp;#39;)
#if you use mac OS, you should change the path of font file
#default: simsun.ttc (songti)

#Figure1.pdf display Chinese
#install.packages(&amp;#39;showtext&amp;#39;)
#install.packages(&amp;#39;Cairo&amp;#39;)
#install.packages(&amp;#39;sysfonts&amp;#39;)
#install.packages(&amp;#39;showtextdb&amp;#39;)
library(&amp;#39;sysfonts&amp;#39;)
library(&amp;#39;showtextdb&amp;#39;)
library(&amp;#39;showtext&amp;#39;)
library(&amp;#39;Cairo&amp;#39;)

#################################edit here##################################

#set working path

#open matrix
rawdata = bruceR::import(&amp;quot;C:\\Users\\hmz19\\Desktop\\Mental Health\\task\\task11\\data\\depression_matrix_a_0.xlsx&amp;quot;)  #Load data for plot (difference between specific and compound symptoms)
  #the structure of matrixA: 
  #first row: scale_name_1, scale_name_2, scale_name_3,...,scale_name_n,S_name
  #...
  #each row represents a symptom
  #each column represents a scale

#setting the number of scales and symptoms 
n_scales = 26 #number of scales
n_symptoms = 95 #number of symptoms
  
##############################create function ##############################
#######################click 2 times and get your graph#####################
matrixA_plot &amp;lt;- function(dataplot,n_scal,n_symp){
  set.seed(223)
  d &amp;lt;- dataplot %&amp;gt;%
    dplyr::select(.,-S_name) %&amp;gt;%
    dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = &amp;quot;&amp;quot;)) %&amp;gt;%
    melt(., id.vars=&amp;quot;S&amp;quot;, variable.name=&amp;quot;Scales&amp;quot;, value.name=&amp;quot;Type&amp;quot;) %&amp;gt;%
    dplyr::filter(.,Type &amp;gt;= 1) %&amp;gt;%
    dplyr::mutate(.,Type = ifelse(Type==1,&amp;quot;Scale contains compound symptom&amp;quot;,&amp;quot;Scale contains specific symptom&amp;quot;)) %&amp;gt;%
    dplyr::mutate(.,S=as.numeric(S))
    
  symp &amp;lt;- dataplot %&amp;gt;%
    dplyr::mutate(.,S=1:nrow(.)) %&amp;gt;%
    dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %&amp;gt;%
    dplyr::select(S,S_name)
    
  #levels(symp$S_name)
    
  num = d %&amp;gt;%
    dplyr::mutate(n=1) %&amp;gt;%
    dplyr::group_by(Scales) %&amp;gt;%
    dplyr::summarise(.,count = sum(n)) %&amp;gt;%
    dplyr::ungroup() %&amp;gt;%
    dplyr::arrange(.,desc(count)) %&amp;gt;%
    dplyr::mutate(order=1:nrow(.))
    
    
  plot = dplyr::full_join(num, d, by = &amp;quot;Scales&amp;quot;) %&amp;gt;%
    dplyr::mutate(Scales2=order) %&amp;gt;%
    dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %&amp;gt;%
    dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %&amp;gt;%
    dplyr::select(S,Scales,Scales2,Type)
    
  #levels(plot$Scales)
    
  # Plot
  pal_rb&amp;lt;- viridis(n_scal,option = &amp;quot;H&amp;quot;)
  #font setting
  showtext::showtext.auto(enable = T)
  font_add(family = &amp;quot;songti&amp;quot;,regular = &amp;quot;C:/Windows/Fonts/simsun.ttc&amp;quot;) 
    #add font = songti, otherwise, the Chinese cannot be displayed in pdf
    
    
  a&amp;lt;- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
    geom_line() + #keep this here, otherwise there is an error 
    xlab(&amp;quot;&amp;quot;) +
    ylab(&amp;quot;&amp;quot;) +
    # Generate the grid lines
    geom_hline(yintercept = 1:n_scal, colour = &amp;quot;grey80&amp;quot;, size = .2) +
    geom_vline(xintercept = 1:n_symp, colour = &amp;quot;grey80&amp;quot;, size = .2) +
    # Points and lines
    geom_line(colour=&amp;quot;grey60&amp;quot;) +
    geom_point(size=3, fill=&amp;quot;white&amp;quot;) +
    # Fill the middle space with a white blank rectangle
    geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill=&amp;quot;white&amp;quot;, color=NA) +
    # Polar coordinates 
    #circle or not
    #coord_polar() +
    scale_shape_manual(values=c(21,19)) +
    # The angle for the symptoms and remove the default grid lines
    theme(axis.text.x = element_text(angle=90, hjust=1),
          axis.text.y = element_text(angle=120, hjust=1),
          panel.border = element_blank(),
          axis.line = element_blank(),
          axis.ticks = element_blank(),
          panel.grid = element_blank(),
          panel.background = element_blank(),
          legend.position=&amp;quot;right&amp;quot;,
          plot.margin = unit(rep(.5,4), &amp;quot;lines&amp;quot;),
          text = element_text(family=&amp;quot;songti&amp;quot;)) +
    labs(fill=&amp;quot;&amp;quot;) + # remove legend title
    scale_y_continuous(limits=c(0,n_scal+0.5), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
    scale_color_manual(values=pal_rb);  

    # Figure 1 was further adjusted in Inkscape
    
return(a)
}

matrixA_plot(dataplot = rawdata,
             n_scal = n_scales,
             n_symp = n_symptoms)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://chuan-peng-lab.netlify.app/post/content-analysis/index.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
